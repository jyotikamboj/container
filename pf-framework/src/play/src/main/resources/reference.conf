#
# Copyright (C) 2009-2013 Typesafe Inc. <http://www.typesafe.com>
#

# Reference configuration for Play

#default timeout for promises
promise.akka.actor.typed.timeout=5s

play {
  http {

    # The application context.
    # Must start with /.
    context = "/"

    # The error handler.
    # Used by Play's built in DI support to locate and bind an error handler.  Must be one of the following:
    # - A FQCN that implements play.api.http.HttpErrorHandler (Scala).
    # - A FQCN that implements play.http.HttpErrorHandler (Java).
    # - provided, indicates that the application has bound an instance of play.api.http.HttpErrorHandler through some
    #   other mechanism.
    # If undefined or empty, will attempt to load a class called ErrorHandler in the root package, otherwise if that's
    # not found, will default to play.api.http.GlobalSettingsHttpErrorHandler, which delegates to legacy error handling
    # methods on Global.
    errorHandler = ""

    # Session configuration
    session = {

      # The cookie name
      cookieName = "PLAY_SESSION"

      # Whether the secure attribute of the cookie should be set to true
      secure = false

      # The max age to set on the cookie.
      # If not defined, session cookies are used (that is, the cookie expires when the user closes their browser).
      # An important thing to note, this only sets when the browser will discard the cookie. Play will consider any
      # cookie value with a valid signature to be a valid session forever. To implement a server side session timeout,
      # you need to put a timestamp in the session and check it at regular intervals to possibly expire it.
      # maxAge = 2 hours

      # Whether the HTTP only attribute of the cookie should be set to true
      httpOnly = true

      # The domain to set on the session cookie
      # If undefined or empty, does not set a domain on the session cookie.
      domain = ""
    }

    # Flash configuration
    flash = {
      # The cookie name
      cookieName = "PLAY_FLASH"
    }

  }

  modules {

    # The enabled modules that should be automatically loaded.
    enabled += "play.api.inject.BuiltinModule"
    enabled += "play.api.i18n.I18nModule"
    enabled += "play.api.libs.concurrent.AkkaModule"

    # A way to disable modules that are automatically enabled
    disabled = []

    # Internationalisation configuration
    i18n {

      # A path to prefix message file loading with.  Use this if you want to place your messages resources at some path
      # other than the root application path.
      path = ""

      # The name of the cookie to store the Play language in.  This cookie is set when Langs.setLang is invoked, and
      # read when the preferred lang is loaded.
      langCookieName = "PLAY_LANG"

    }
    akka {
      actor-system = "application"
    }
  }

  akka {
    loggers = ["akka.event.Logging$DefaultLogger", "akka.event.slf4j.Slf4jLogger"]
    loglevel = WARNING

    actor {
      default-dispatcher = {
        fork-join-executor {
          parallelism-factor = 1.0
          parallelism-max = 24
        }
      }

    }

  }

  crypto {
    aes {
      transformation = "AES/CTR/NoPadding"
    }
  }
}
